steps:
  # Steps to pull a docker image for pgadmin, push it to container registry and deploy it to cloud run.
  - name: "gcr.io/cloud-builders/docker"
    args: ["pull", "dpage/pgadmin4"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["tag", "dpage/pgadmin4", "gcr.io/cbi-349000/pgadmin"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/cbi-349000/pgadmin"]

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "pg-admin",
        "--image",
        "gcr.io/cbi-349000/pgadmin",
        "--region",
        "us-central1",
        "--add-cloudsql-instances",
        "cbi-349000:us-central1:mypostgres",
        "--platform",
        "managed",
        "--port",
        "80",
        "--allow-unauthenticated",
        "--set-env-vars",
        "PGADMIN_DEFAULT_EMAIL=user@gmail.com",
        "--set-env-vars",
        "PGADMIN_DEFAULT_PASSWORD=SuperSecret",
      ]

  # Steps to build a docker image for go-microservice, push it to container registry and deploy it to cloud run.
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/cbi-349000/go-microservice", "."]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/cbi-349000/go-microservice"]

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "go-microservice",
        "--image",
        "gcr.io/cbi-349000/go-microservice",
        "--region",
        "us-central1",
        "--add-cloudsql-instances",
        "cbi-349000:us-central1:mypostgres",
        "--platform",
        "managed",
        "--port",
        "8080",
        "--allow-unauthenticated",
      ]
images:
  - gcr.io/cbi-349000/go-microservice
  - gcr.io/cbi-349000/pgadmin
